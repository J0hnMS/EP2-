# Transforma base de questões
def transforma_base(questoes):
    lista_facil = []
    lista_medio = []
    lista_dificil = []
    dic = {}
    for i in questoes:
        for questao, nivel in i.items():
            if nivel == 'facil':
                lista_facil.append(i)
            elif nivel == 'medio':
                lista_medio.append(i)
            elif nivel == 'dificil':
                lista_dificil.append(i)
    
    if lista_facil != []:
        dic['facil'] = lista_facil
    if lista_medio  != []:
        dic['medio'] = lista_medio
    if lista_dificil != []:
        dic['dificil'] = lista_dificil
       
    return dic
    
    
# Valida uma questão
def valida_questao(questao):
    print(questao)
    erros = {}
    opcoes = ['A', 'B', 'C', 'D']

    if len(questao.keys()) != 4:
        erros['outro'] = 'numero_chaves_invalido'
        temerro = True
        
# Questao para texto
def questao_para_texto(questao, ID):
    f = ''
    b = '----------------------------------------\n'
    c = 'QUESTAO ' + str(ID) + '\n\n'
    d = questao['titulo'] +  '\n\n'
    e = 'RESPOSTAS:\n'
    for letra, texto in questao['opcoes'].items():
        f +=  (f'{letra}: {texto}' '\n')
    st =  b + c + d + e + f 
    return st

    # titulo
    if 'titulo' not in questao.keys():
        erros['titulo'] = 'nao_encontrado'
    elif questao['titulo'] == '' or \
        len(questao['titulo'].strip()) == 0 or \
        '\t' in questao['titulo']:
        erros['titulo'] = 'vazio'
    
    # niveis 
    niveis = ['facil', 'medio', 'dificil']
    if 'nivel' not in questao.keys():
        erros['nivel'] = 'nao_encontrado'
    elif questao['nivel'] not in niveis:
        erros['nivel'] = 'valor_errado'

    # opcoes
    temopcoes = True
    if 'opcoes' not in questao.keys():
        erros['opcoes'] = 'nao_encontrado'
        temopcoes = False  
    elif len(questao['opcoes'].keys()) != 4:
        erros['opcoes'] = 'tamanho_invalido'
        temopcoes = False
    
    if temopcoes and questao['opcoes'] == 'chave_invalida_ou_nao_encontrada':
        temopcoes = False
    
    if temopcoes:
        if 'A' not in questao['opcoes'].keys():
            erros['opcoes'] = 'chave_invalida_ou_nao_encontrada'
        elif 'B' not in questao['opcoes'].keys():
            erros['opcoes'] = 'chave_invalida_ou_nao_encontrada'
        elif 'C' not in questao['opcoes'].keys():
            erros['opcoes'] = 'chave_invalida_ou_nao_encontrada'
        elif 'D' not in questao['opcoes'].keys():
            erros['opcoes'] = 'chave_invalida_ou_nao_encontrada'
        else:
            for opcao in opcoes:
                if opcao in questao['opcoes'].keys():
                    if questao['opcoes'][opcao] == "" or \
                    len(questao['opcoes'][opcao].strip()) == 0 or \
                    '\t' in questao['opcoes'][opcao]:
                        if 'opcoes' not in erros:
                            erros['opcoes'] = {}
                        erros['opcoes'][opcao] = 'vazia'

    # correta
    if 'correta' not in questao.keys():
        erros['correta'] = 'nao_encontrado'
    elif questao['correta'] not in opcoes:
        erros['correta'] = 'valor_errado'
    
    return erros
    
#Sorteia uma questão
import random
def sorteia_questao(dic, nivel):
    sorteio = random.choice(dic[nivel])
    return sorteio
    
    
#Sorteia uma questão inédita
import random
def sorteia_questao_inedida(dic, nivel, lista):
    sorteio = random.choice(dic[nivel])
    lista.append(sorteio)
    return sorteio
